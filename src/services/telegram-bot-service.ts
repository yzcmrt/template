import TelegramBot from 'node-telegram-bot-api';
import dotenv from 'dotenv';

// .env dosyasÄ±nÄ± yÃ¼kle
dotenv.config();

// Bot token'Ä± .env dosyasÄ±ndan al
const token = process.env.TELEGRAM_BOT_TOKEN;
const appUrl = process.env.APP_URL;

// Bot token kontrol edilir
if (!token) {
  console.error('TELEGRAM_BOT_TOKEN bulunamadÄ±. LÃ¼tfen .env dosyasÄ±nÄ± kontrol edin.');
  process.exit(1);
}

if (!appUrl) {
  console.error('APP_URL bulunamadÄ±. LÃ¼tfen .env dosyasÄ±nÄ± kontrol edin.');
  process.exit(1);
}

// Telegram bot oluÅŸtur
const bot = new TelegramBot(token, { polling: true });

// Bot baÅŸlatma mesajÄ±
console.log('Telegram bot baÅŸlatÄ±ldÄ±!');
bot.getMe().then((me) => {
  console.log(`Bot kullanÄ±cÄ± adÄ±: @${me.username}`);
});

// Start komutu
bot.onText(/\/start(?:\s+(.+))?/, async (msg: TelegramBot.Message, match: RegExpExecArray | null) => {
  const chatId = msg.chat.id;
  const referralCode = match && match[1] ? match[1] : null;
  
  // KullanÄ±cÄ± bilgilerini al
  const userId = msg.from?.id;
  const firstName = msg.from?.first_name || 'KullanÄ±cÄ±';
  
  // Referral kodu varsa kaydet
  if (referralCode) {
    console.log(`KullanÄ±cÄ± ${userId} referral kodu ile kaydoldu: ${referralCode}`);
    // Burada referral kodu veritabanÄ±na kaydedilebilir
  }
  
  // Mini App butonu ile karÅŸÄ±lama mesajÄ± gÃ¶nder
  await bot.sendMessage(chatId, `Merhaba ${firstName}! TON Mining uygulamasÄ±na hoÅŸ geldiniz.`, {
    reply_markup: {
      inline_keyboard: [
        [{ text: 'ğŸš€ TON Mining App\'i BaÅŸlat', web_app: { url: appUrl } }]
      ]
    }
  });
});

// YardÄ±m komutu
bot.onText(/\/help/, async (msg: TelegramBot.Message) => {
  const chatId = msg.chat.id;
  
  await bot.sendMessage(chatId, 
    `*TON Mining App YardÄ±m*\n\n` +
    `â€¢ */start* - UygulamayÄ± baÅŸlat\n` +
    `â€¢ */balance* - TON bakiyenizi gÃ¶rÃ¼ntÃ¼leyin\n` +
    `â€¢ */stats* - Madencilik istatistiklerinizi gÃ¶rÃ¼ntÃ¼leyin\n` +
    `â€¢ */referral* - Referans linkinizi alÄ±n\n` +
    `â€¢ */help* - Bu yardÄ±m mesajÄ±nÄ± gÃ¶rÃ¼ntÃ¼leyin\n\n` +
    `Daha fazla bilgi iÃ§in lÃ¼tfen uygulamayÄ± aÃ§Ä±n.`,
    { parse_mode: 'Markdown' }
  );
});

// Bakiye komutu
bot.onText(/\/balance/, async (msg: TelegramBot.Message) => {
  const chatId = msg.chat.id;
  const userId = msg.from?.id;
  
  // Burada gerÃ§ek bakiye verileri API'den alÄ±nabilir
  const mockBalance = (Math.random() * 10).toFixed(2);
  
  await bot.sendMessage(chatId, 
    `ğŸ’° *Bakiye Bilgileriniz*\n\n` +
    `KullanÄ±cÄ± ID: \`${userId}\`\n` +
    `Mevcut TON: *${mockBalance} TON*\n\n` +
    `Bakiyenizi artÄ±rmak iÃ§in uygulamayÄ± aÃ§abilirsiniz.`,
    { 
      parse_mode: 'Markdown',
      reply_markup: {
        inline_keyboard: [
          [{ text: 'ğŸš€ UygulamayÄ± AÃ§', web_app: { url: appUrl } }]
        ]
      }
    }
  );
});

// Ä°statistik komutu
bot.onText(/\/stats/, async (msg: TelegramBot.Message) => {
  const chatId = msg.chat.id;
  
  // Mock istatistikler
  const mockStats = {
    miningPower: (Math.random() * 100).toFixed(0),
    dailyEarning: (Math.random() * 1).toFixed(3),
    totalEarned: (Math.random() * 50).toFixed(2),
    rank: Math.floor(Math.random() * 1000) + 1
  };
  
  await bot.sendMessage(chatId, 
    `ğŸ“Š *Madencilik Ä°statistikleriniz*\n\n` +
    `Madencilik GÃ¼cÃ¼: *${mockStats.miningPower}*\n` +
    `GÃ¼nlÃ¼k KazanÃ§: *${mockStats.dailyEarning} TON*\n` +
    `Toplam KazanÃ§: *${mockStats.totalEarned} TON*\n` +
    `Global SÄ±ralama: *#${mockStats.rank}*\n\n` +
    `Daha detaylÄ± istatistikler iÃ§in uygulamayÄ± aÃ§Ä±n.`,
    { 
      parse_mode: 'Markdown',
      reply_markup: {
        inline_keyboard: [
          [{ text: 'ğŸ“± UygulamayÄ± AÃ§', web_app: { url: appUrl } }]
        ]
      }
    }
  );
});

// Referral komutu
bot.onText(/\/referral/, async (msg: TelegramBot.Message) => {
  const chatId = msg.chat.id;
  const userId = msg.from?.id;
  
  // Referral link oluÅŸtur
  const referralLink = `https://t.me/ton_mining_bot?start=ref${userId}`;
  
  await bot.sendMessage(chatId, 
    `ğŸ”— *Referans Linkiniz*\n\n` +
    `ArkadaÅŸlarÄ±nÄ±zÄ± davet edin ve kazanÃ§ saÄŸlayÄ±n!\n\n` +
    `Referans linkiniz:\n\`${referralLink}\`\n\n` +
    `Her davet ettiÄŸiniz arkadaÅŸÄ±nÄ±zÄ±n kazancÄ±ndan %5 pay alacaksÄ±nÄ±z.`,
    { 
      parse_mode: 'Markdown',
      reply_markup: {
        inline_keyboard: [
          [{ text: 'ğŸ“± UygulamayÄ± AÃ§', web_app: { url: appUrl } }]
        ]
      }
    }
  );
});

// Bot API'yi dÄ±ÅŸa aktar
export default bot;

// Bot baÅŸlatma fonksiyonu
export function startBot() {
  console.log('Telegram bot baÅŸlatÄ±lÄ±yor...');
  return bot;
}

// Bot durdurma fonksiyonu
export function stopBot() {
  console.log('Telegram bot durduruluyor...');
  bot.stopPolling();
}

// Webhook ile Ã§alÄ±ÅŸmasÄ± iÃ§in (Vercel deployment iÃ§in)
export async function setupWebhook(url: string) {
  await bot.setWebHook(`${url}/api/telegram-webhook`);
  console.log(`Webhook ayarlandÄ±: ${url}/api/telegram-webhook`);
} 